# SPDX-License-Identifier: LGPL-2.1-or-later
# This file was generated by tools/generate-settings-dataclasses.py,
# if possible, please make changes by also updating the script.
from __future__ import annotations
from dataclasses import dataclass, field
from typing import List, Optional
from .base import NetworkManagerSettingsMixin


@dataclass
class Ieee8021XSettings(NetworkManagerSettingsMixin):
    """IEEE 802.1x Authentication Settings"""

    altsubject_matches: Optional[List[str]] = field(
        metadata={'dbus_name': 'altsubject-matches', 'dbus_type': 'as'},
        default=None,
    )
    anonymous_identity: Optional[str] = field(
        metadata={'dbus_name': 'anonymous-identity', 'dbus_type': 's'},
        default=None,
    )
    auth_timeout: Optional[int] = field(
        metadata={'dbus_name': 'auth-timeout', 'dbus_type': 'i'},
        default=None,
    )
    ca_cert: Optional[bytes] = field(
        metadata={'dbus_name': 'ca-cert', 'dbus_type': 'ay'},
        default=None,
    )
    ca_cert_password: Optional[str] = field(
        metadata={'dbus_name': 'ca-cert-password', 'dbus_type': 's'},
        default=None,
    )
    ca_cert_password_flags: Optional[int] = field(
        metadata={'dbus_name': 'ca-cert-password-flags', 'dbus_type': 'i'},
        default=None,
    )
    ca_path: Optional[str] = field(
        metadata={'dbus_name': 'ca-path', 'dbus_type': 's'},
        default=None,
    )
    client_cert: Optional[bytes] = field(
        metadata={'dbus_name': 'client-cert', 'dbus_type': 'ay'},
        default=None,
    )
    client_cert_password: Optional[str] = field(
        metadata={'dbus_name': 'client-cert-password', 'dbus_type': 's'},
        default=None,
    )
    client_cert_password_flags: Optional[int] = field(
        metadata={'dbus_name': 'client-cert-password-flags', 'dbus_type': 'i'},
        default=None,
    )
    domain_match: Optional[str] = field(
        metadata={'dbus_name': 'domain-match', 'dbus_type': 's'},
        default=None,
    )
    domain_suffix_match: Optional[str] = field(
        metadata={'dbus_name': 'domain-suffix-match', 'dbus_type': 's'},
        default=None,
    )
    eap: Optional[List[str]] = field(
        metadata={'dbus_name': 'eap', 'dbus_type': 'as'},
        default=None,
    )
    identity: Optional[str] = field(
        metadata={'dbus_name': 'identity', 'dbus_type': 's'},
        default=None,
    )
    optional: Optional[bool] = field(
        metadata={'dbus_name': 'optional', 'dbus_type': 'b'},
        default=False,
    )
    pac_file: Optional[str] = field(
        metadata={'dbus_name': 'pac-file', 'dbus_type': 's'},
        default=None,
    )
    password: Optional[str] = field(
        metadata={'dbus_name': 'password', 'dbus_type': 's'},
        default=None,
    )
    password_flags: Optional[int] = field(
        metadata={'dbus_name': 'password-flags', 'dbus_type': 'i'},
        default=None,
    )
    password_raw: Optional[bytes] = field(
        metadata={'dbus_name': 'password-raw', 'dbus_type': 'ay'},
        default=None,
    )
    password_raw_flags: Optional[int] = field(
        metadata={'dbus_name': 'password-raw-flags', 'dbus_type': 'i'},
        default=None,
    )
    phase1_auth_flags: Optional[int] = field(
        metadata={'dbus_name': 'phase1-auth-flags', 'dbus_type': 'u'},
        default=None,
    )
    phase1_fast_provisioning: Optional[str] = field(
        metadata={'dbus_name': 'phase1-fast-provisioning', 'dbus_type': 's'},
        default=None,
    )
    phase1_peaplabel: Optional[str] = field(
        metadata={'dbus_name': 'phase1-peaplabel', 'dbus_type': 's'},
        default=None,
    )
    phase1_peapver: Optional[str] = field(
        metadata={'dbus_name': 'phase1-peapver', 'dbus_type': 's'},
        default=None,
    )
    phase2_altsubject_matches: Optional[List[str]] = field(
        metadata={'dbus_name': 'phase2-altsubject-matches', 'dbus_type': 'as'},
        default=None,
    )
    phase2_auth: Optional[str] = field(
        metadata={'dbus_name': 'phase2-auth', 'dbus_type': 's'},
        default=None,
    )
    phase2_autheap: Optional[str] = field(
        metadata={'dbus_name': 'phase2-autheap', 'dbus_type': 's'},
        default=None,
    )
    phase2_ca_cert: Optional[bytes] = field(
        metadata={'dbus_name': 'phase2-ca-cert', 'dbus_type': 'ay'},
        default=None,
    )
    phase2_ca_cert_password: Optional[str] = field(
        metadata={'dbus_name': 'phase2-ca-cert-password', 'dbus_type': 's'},
        default=None,
    )
    phase2_ca_cert_password_flags: Optional[int] = field(
        metadata={'dbus_name': 'phase2-ca-cert-password-flags',
                  'dbus_type': 'i'},
        default=None,
    )
    phase2_ca_path: Optional[str] = field(
        metadata={'dbus_name': 'phase2-ca-path', 'dbus_type': 's'},
        default=None,
    )
    phase2_client_cert: Optional[bytes] = field(
        metadata={'dbus_name': 'phase2-client-cert', 'dbus_type': 'ay'},
        default=None,
    )
    phase2_client_cert_password: Optional[str] = field(
        metadata={'dbus_name': 'phase2-client-cert-password', 'dbus_type': 's'},
        default=None,
    )
    phase2_client_cert_password_flags: Optional[int] = field(
        metadata={'dbus_name': 'phase2-client-cert-password-flags',
                  'dbus_type': 'i'},
        default=None,
    )
    phase2_domain_match: Optional[str] = field(
        metadata={'dbus_name': 'phase2-domain-match', 'dbus_type': 's'},
        default=None,
    )
    phase2_domain_suffix_match: Optional[str] = field(
        metadata={'dbus_name': 'phase2-domain-suffix-match', 'dbus_type': 's'},
        default=None,
    )
    phase2_private_key: Optional[bytes] = field(
        metadata={'dbus_name': 'phase2-private-key', 'dbus_type': 'ay'},
        default=None,
    )
    phase2_private_key_password: Optional[str] = field(
        metadata={'dbus_name': 'phase2-private-key-password', 'dbus_type': 's'},
        default=None,
    )
    phase2_private_key_password_flags: Optional[int] = field(
        metadata={'dbus_name': 'phase2-private-key-password-flags',
                  'dbus_type': 'i'},
        default=None,
    )
    phase2_subject_match: Optional[str] = field(
        metadata={'dbus_name': 'phase2-subject-match', 'dbus_type': 's'},
        default=None,
    )
    pin: Optional[str] = field(
        metadata={'dbus_name': 'pin', 'dbus_type': 's'},
        default=None,
    )
    pin_flags: Optional[int] = field(
        metadata={'dbus_name': 'pin-flags', 'dbus_type': 'i'},
        default=None,
    )
    private_key: Optional[bytes] = field(
        metadata={'dbus_name': 'private-key', 'dbus_type': 'ay'},
        default=None,
    )
    private_key_password: Optional[str] = field(
        metadata={'dbus_name': 'private-key-password', 'dbus_type': 's'},
        default=None,
    )
    private_key_password_flags: Optional[int] = field(
        metadata={'dbus_name': 'private-key-password-flags', 'dbus_type': 'i'},
        default=None,
    )
    subject_match: Optional[str] = field(
        metadata={'dbus_name': 'subject-match', 'dbus_type': 's'},
        default=None,
    )
    system_ca_certs: Optional[bool] = field(
        metadata={'dbus_name': 'system-ca-certs', 'dbus_type': 'b'},
        default=False,
    )
