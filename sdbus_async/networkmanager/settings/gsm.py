# SPDX-License-Identifier: LGPL-2.1-or-later
# This file was generated by tools/generate-settings-dataclasses.py,
# if possible, please make changes by also updating the script.
from __future__ import annotations
from dataclasses import dataclass, field
from typing import Optional
from .base import NetworkManagerSettingsMixin


@dataclass
class GsmSettings(NetworkManagerSettingsMixin):
    """GSM-based Mobile Broadband Settings"""

    apn: Optional[str] = field(
        metadata={'dbus_name': 'apn', 'dbus_type': 's'},
        default=None,
    )
    auto_config: Optional[bool] = field(
        metadata={'dbus_name': 'auto-config', 'dbus_type': 'b'},
        default=False,
    )
    device_id: Optional[str] = field(
        metadata={'dbus_name': 'device-id', 'dbus_type': 's'},
        default=None,
    )
    home_only: Optional[bool] = field(
        metadata={'dbus_name': 'home-only', 'dbus_type': 'b'},
        default=False,
    )
    mtu: Optional[int] = field(
        metadata={'dbus_name': 'mtu', 'dbus_type': 'u'},
        default=None,
    )
    network_id: Optional[str] = field(
        metadata={'dbus_name': 'network-id', 'dbus_type': 's'},
        default=None,
    )
    number: Optional[str] = field(
        metadata={'dbus_name': 'number', 'dbus_type': 's'},
        default=None,
    )
    password: Optional[str] = field(
        metadata={'dbus_name': 'password', 'dbus_type': 's'},
        default=None,
    )
    password_flags: Optional[int] = field(
        metadata={'dbus_name': 'password-flags', 'dbus_type': 'i'},
        default=None,
    )
    pin: Optional[str] = field(
        metadata={'dbus_name': 'pin', 'dbus_type': 's'},
        default=None,
    )
    pin_flags: Optional[int] = field(
        metadata={'dbus_name': 'pin-flags', 'dbus_type': 'i'},
        default=None,
    )
    sim_id: Optional[str] = field(
        metadata={'dbus_name': 'sim-id', 'dbus_type': 's'},
        default=None,
    )
    sim_operator_id: Optional[str] = field(
        metadata={'dbus_name': 'sim-operator-id', 'dbus_type': 's'},
        default=None,
    )
    username: Optional[str] = field(
        metadata={'dbus_name': 'username', 'dbus_type': 's'},
        default=None,
    )
