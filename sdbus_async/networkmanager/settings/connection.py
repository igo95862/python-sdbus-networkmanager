# SPDX-License-Identifier: LGPL-2.1-or-later
# This file was generated by tools/generate-settings-dataclasses.py,
# if possible, please make changes by also updating the script.
from __future__ import annotations
from dataclasses import dataclass, field
from typing import List, Optional
from .base import NetworkManagerSettingsMixin


@dataclass
class ConnectionSettings(NetworkManagerSettingsMixin):
    """General Connection Profile Settings"""

    connection_id: str = field(
        metadata={'dbus_name': 'id', 'dbus_type': 's'},
    )
    connection_type: str = field(
        metadata={'dbus_name': 'type', 'dbus_type': 's'},
    )
    uuid: str = field(
        metadata={'dbus_name': 'uuid', 'dbus_type': 's'},
    )
    auth_retries: Optional[int] = field(
        metadata={'dbus_name': 'auth-retries', 'dbus_type': 'i'},
        default=None,
    )
    autoconnect: Optional[bool] = field(
        metadata={'dbus_name': 'autoconnect', 'dbus_type': 'b'},
        default=True,
    )
    autoconnect_priority: Optional[int] = field(
        metadata={'dbus_name': 'autoconnect-priority', 'dbus_type': 'i'},
        default=None,
    )
    autoconnect_retries: Optional[int] = field(
        metadata={'dbus_name': 'autoconnect-retries', 'dbus_type': 'i'},
        default=None,
    )
    autoconnect_slaves: Optional[int] = field(
        metadata={'dbus_name': 'autoconnect-slaves', 'dbus_type': 'i'},
        default=None,
    )
    dns_over_tls: Optional[int] = field(
        metadata={'dbus_name': 'dns-over-tls', 'dbus_type': 'i'},
        default=None,
    )
    gateway_ping_timeout: Optional[int] = field(
        metadata={'dbus_name': 'gateway-ping-timeout', 'dbus_type': 'u'},
        default=None,
    )
    interface_name: Optional[str] = field(
        metadata={'dbus_name': 'interface-name', 'dbus_type': 's'},
        default=None,
    )
    lldp: Optional[int] = field(
        metadata={'dbus_name': 'lldp', 'dbus_type': 'i'},
        default=None,
    )
    llmnr: Optional[int] = field(
        metadata={'dbus_name': 'llmnr', 'dbus_type': 'i'},
        default=None,
    )
    master: Optional[str] = field(
        metadata={'dbus_name': 'master', 'dbus_type': 's'},
        default=None,
    )
    mdns: Optional[int] = field(
        metadata={'dbus_name': 'mdns', 'dbus_type': 'i'},
        default=None,
    )
    metered: Optional[int] = field(
        metadata={'dbus_name': 'metered', 'dbus_type': 'i'},
        default=None,
    )
    mud_url: Optional[str] = field(
        metadata={'dbus_name': 'mud-url', 'dbus_type': 's'},
        default=None,
    )
    multi_connect: Optional[int] = field(
        metadata={'dbus_name': 'multi-connect', 'dbus_type': 'i'},
        default=None,
    )
    permissions: Optional[List[str]] = field(
        metadata={'dbus_name': 'permissions', 'dbus_type': 'as'},
        default=None,
    )
    read_only: Optional[bool] = field(
        metadata={'dbus_name': 'read-only', 'dbus_type': 'b'},
        default=False,
    )
    secondaries: Optional[List[str]] = field(
        metadata={'dbus_name': 'secondaries', 'dbus_type': 'as'},
        default=None,
    )
    slave_type: Optional[str] = field(
        metadata={'dbus_name': 'slave-type', 'dbus_type': 's'},
        default=None,
    )
    stable_id: Optional[str] = field(
        metadata={'dbus_name': 'stable-id', 'dbus_type': 's'},
        default=None,
    )
    timestamp: Optional[int] = field(
        metadata={'dbus_name': 'timestamp', 'dbus_type': 't'},
        default=None,
    )
    wait_device_timeout: Optional[int] = field(
        metadata={'dbus_name': 'wait-device-timeout', 'dbus_type': 'i'},
        default=None,
    )
    zone: Optional[str] = field(
        metadata={'dbus_name': 'zone', 'dbus_type': 's'},
        default=None,
    )
